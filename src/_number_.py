#!/usr/bin/python3
# 数字类型转换

a = "1"
b = "2"
c = 3
d = 4

# 在转换时，参数可以是整数的字符串，例："1";或者数字类型，不能字符串例："1.0"
# 将数据转换成一个整数
int(a)
# 将数据转换成一个浮点数
float(a)
# 转换到一个复数，实数部分为参数，虚数部分为0
complex(a)
# 转换到一个复数，实数部分为c，虚数部分为d,参数必须是数字表达式
complex(c, d)

# / 除号总是返回一个浮点数，如果只是想得到一个整数，使用 //
# 使用 // 得到的结果，只保留整数部分，舍弃小数点后面的数值，即向下取整
print(c // d)

# ** 幂运算
print(c ** 2)
print(c ** 4)

# ????
# 在交互模式中，最后被输出的表达式结果被赋值给变量 _
# _变量应被用户视为只读变量

# 数学函数
# 部分函数需要先引入math库
import math

x = 2
y = 4
# 绝对值
abs(c)
# 上入整数,无论小数点后面是多少，都会向前进一位
math.ceil(c)
# x < y返回-1，x == y返回0，x > y返回1
(x > y) - (x < y)
# 返回e的参数次幂
math.exp(x)
# 返回参数的float类型的绝对值
math.fabs(-10)
# 返回参数的下舍整数
math.floor(x)
# ????
# 返回x的自然对数，默认以e为基数，base参数给定时，将x的对数返回给定的base：y
# 计算式为：log(x)/log(y)
math.log(math.e)
math.log(x, y)
# 返回以10为基数的参数的对数
math.log10(x)
# 返回参数的最大值,参数可以为序列
max([1, 2, 3])
# 返回参数的最小值，参数可以为序列
min(1, 2, 3, 4)
# 返回参数的整数部分和小数部分，两部分的数值符号与参数相同，整数部分以浮点型表示
math.modf(100.123)
# x的y次幂
pow(x, y)
# 返回浮点数参数的四舍五入值，如果参数有两个，则代表舍入到小数点后的位数
round(200.234123, 2)
# 返回参数的平方根,返回的值为浮点型
math.sqrt(4)

# 随机数函数
# 需要先导入random库
import random

# 从序列的元素中随机挑选一个元素
random.choice([1, 2, 3, 4, 5, 6, 7, 8])
# 从指定范围内，按指定基数递增的集合中获取一个随机数，基数缺省值为1
# 参数依次为开始数值，结束数值，缺省值
random.randrange(2, 16, 4)
# 随机生成下一个实数,范围在0~1之间
random.random()
# ????
# 改变随机数生成器的种子seed
random.seed(5)
# 将序列的所有元素随机排序
mList = [1, 2, 3, 4, 5, 6]
random.shuffle(mList)
print(mList)
# 随机生成下一个实数，范围在两个参数之内
random.uniform(4, 8)
# 随机生成一个整数，int类型，可指定这个整数的范围
random.randint(2, 8)
# 从指定序列中，随机的截取指定长度的片段，不修改原序列
mStr = "12345678"
random.sample(mStr, 4)
print(mStr)
